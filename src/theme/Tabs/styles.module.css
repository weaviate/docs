/* src/theme/Tabs/styles.module.scss */

.codeDropdownContainer {
  margin: 2rem 0;
  position: relative;
}

.codeDropdownHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  margin-bottom: 1.25rem;
  border-bottom: 2px solid var(--ifm-color-emphasis-300);
  padding-bottom: 1rem;
  background-color: var(--ifm-code-background);
  padding: 1rem;
  border-radius: 8px 8px 0 0;
  background: linear-gradient(
    to right,
    var(--ifm-code-background),
    transparent
  );
  position: relative;
}

.leftSection {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.rightSection {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  margin-left: auto;
  position: relative;
  z-index: 10;
  flex-wrap: wrap;
  justify-content: flex-end;
}

/* Play Button Styles */
.playButton {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  font-size: 14px;
  font-weight: 600;
  color: white;
  background: var(--site-primary);
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;

  svg {
    width: 16px;
    height: 16px;
  }

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 205, 55, 0.4);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
  }

  &:active::before {
    width: 300px;
    height: 300px;
  }
}

.playButtonSpinner {
  animation: rotate 1s linear infinite;
  width: 16px;
  height: 16px;
}

.spinnerPath {
  stroke: white;
  stroke-linecap: round;
  animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}

/* Code Execution Output Styles */
.executionOutput {
  margin-top: 1rem;
  animation: slideDown 0.3s ease;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.executionLoading {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--ifm-color-emphasis-100);
  border-radius: 8px;
  border: 1px solid var(--ifm-color-emphasis-300);

  .spinner {
    width: 20px;
    height: 20px;
    border: 2px solid var(--ifm-color-emphasis-300);
    border-top-color: var(--ifm-color-primary);
    border-radius: 50%;
    animation: spin 0.6s linear infinite;
  }

  span {
    font-size: 14px;
    color: var(--ifm-color-emphasis-700);
  }
}

.outputContainer,
.errorContainer {
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid;
  animation: fadeIn 0.3s ease;
}

.outputContainer {
  border-color: var(--ifm-color-success-dark);
  background-color: var(--ifm-color-success-lightest);
}

.errorContainer {
  border-color: var(--ifm-color-danger-dark);
  background-color: var(--ifm-color-danger-lightest);
}

.outputHeader,
.errorHeader {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  font-weight: 600;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.outputHeader {
  background-color: var(--ifm-color-success-light);
  color: var(--ifm-color-success-darkest);
}

.errorHeader {
  background-color: var(--ifm-color-danger-light);
  color: var(--ifm-color-danger-darkest);
}

.outputIcon,
.errorIcon {
  width: 20px;
  height: 20px;
}

.outputIcon {
  color: var(--ifm-color-success-darkest);
}

.errorIcon {
  color: var(--ifm-color-danger-darkest);
}

.outputContent,
.errorContent {
  margin: 0;
  padding: 1rem;
  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier,
    monospace;
  font-size: 14px;
  line-height: 1.5;
  overflow-x: auto;
  background-color: rgba(255, 255, 255, 0.7);
}

.outputContent {
  color: var(--ifm-color-success-darkest);
}

.errorContent {
  color: var(--ifm-color-danger-darkest);
}

/* Existing styles continue below */
.apiDocsLink {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 0.875rem;
  font-size: 14px;
  font-weight: 500;
  color: var(--ifm-color-emphasis-700);
  background-color: var(--ifm-color-emphasis-100);
  border: 1px solid var(--ifm-color-emphasis-300);
  border-radius: 6px;
  text-decoration: none;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.apiDocsLink:hover {
  color: var(--ifm-color-primary);
  background-color: var(--ifm-color-emphasis-200);
  border-color: var(--ifm-color-primary);
  text-decoration: none;
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.versionInfo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  position: relative;
  z-index: 10;
}

.versionLabel {
  font-size: 13px;
  color: var(--ifm-color-emphasis-600);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.35rem;
  white-space: nowrap;
  position: relative;
}

.infoIcon {
  opacity: 0.6;
  transition: opacity 0.2s ease;
  cursor: help;
  flex-shrink: 0;
}

.infoIcon:hover {
  opacity: 1;
}

.docSystemIcon {
  width: 24px;
  height: 24px;
  object-fit: contain;
}

.languageLabel {
  font-size: 14px;
  color: var(--ifm-color-emphasis-700);
  text-transform: uppercase;
  letter-spacing: 0.75px;
  font-weight: 700;
}

.languageSelector {
  position: relative;
  display: inline-block;
}

.languageDropdown {
  padding: 0.625rem 3rem;
  font-size: 15px;
  border: 2px solid var(--ifm-color-emphasis-400);
  border-radius: 8px;
  background-color: var(--ifm-background-color);
  color: var(--ifm-font-color-base);
  cursor: pointer;
  appearance: none;
  min-width: 180px;
  font-weight: 600;
  transition: all 0.2s ease;
  font-family: inherit;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.languageDropdown:hover {
  border-color: var(--ifm-color-primary);
  background-color: var(--ifm-color-emphasis-100);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

.languageDropdown:focus {
  outline: none;
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}

.languageIcon {
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-50%);
  width: 18px;
  height: 18px;
  pointer-events: none;
}

.dropdownArrow {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  pointer-events: none;
  color: var(--ifm-color-emphasis-600);
}

.codeContent {
  animation: fadeIn 0.2s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.comingSoon {
  padding: 1.5rem 2rem;
  text-align: center;
  border: 1px dashed var(--ifm-color-emphasis-400);
  border-radius: var(--ifm-code-border-radius);
  background-color: var(--ifm-background-surface-color);
  color: var(--ifm-color-emphasis-700);

  p {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
  }

  span {
    font-size: 0.9rem;
    color: var(--ifm-color-emphasis-600);
  }
}

/* Dark mode support */
html[data-theme="dark"] {
  .languageDropdown {
    background-color: var(--ifm-background-surface-color);
    border-color: var(--ifm-color-emphasis-300);
    color: var(--ifm-font-color-base);
  }

  .languageDropdown:hover {
    border-color: var(--ifm-color-primary);
  }

  .codeDropdownHeader {
    border-bottom-color: var(--ifm-color-emphasis-300);
  }

  .languageLabel {
    color: var(--ifm-color-emphasis-500);
  }

  .versionLabel {
    color: var(--ifm-color-emphasis-500);
  }

  .dropdownArrow {
    color: var(--ifm-color-emphasis-500);
  }

  .apiDocsLink {
    background-color: var(--ifm-color-emphasis-100);
    border-color: var(--ifm-color-emphasis-400);
    color: var(--ifm-color-emphasis-700);
  }

  .apiDocsLink:hover {
    background-color: var(--ifm-color-emphasis-200);
    border-color: var(--ifm-color-primary);
  }

  .outputContainer {
    background-color: rgba(16, 185, 129, 0.1);
  }

  .errorContainer {
    background-color: rgba(214, 100, 100, 0.1);
  }

  .outputContent,
  .errorContent {
    background-color: rgba(0, 0, 0, 0.2);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .codeDropdownHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .leftSection {
    width: 100%;
    justify-content: space-between;
  }

  .rightSection {
    width: 100%;
    margin-left: 0;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .versionInfo {
    width: 100%;
  }

  .apiDocsLink {
    width: 100%;
    justify-content: center;
  }

  .languageSelector {
    flex: 1;
  }

  .languageDropdown {
    min-width: unset;
    width: 100%;
  }

  .playButton {
    margin-left: auto;
  }
}

/* Smooth transitions for content changes */
.codeContent > * {
  animation: slideIn 0.15s ease;
}

@keyframes slideIn {
  from {
    opacity: 0.8;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
