name: CI for testing-ci branch

on:
  # Run on pushes to the testing-ci branch
  push:
    branches:
      - testing-ci

  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Add Docker setup and caching steps
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and cache Docker images
      uses: docker/build-push-action@v6
      with:
        # A comma-separated list of services to build from your docker-compose.yml
        # For example, if your service is named 'weaviate' in the compose file.
        context: .
        # This tells the action to load the built images into the local Docker daemon
        load: true
        # Cache configuration
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Start services
      run: docker-compose up -d

    # Your existing Python test steps
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Create virtual environment
      run: python -m venv .venv
    
    - name: Activate virtual environment and install dependencies
      run: |
        source .venv/bin/activate
        pip install -r tests/requirements.txt
    
    - name: Run tests
      env:
        WEAVIATE_URL: ${{ secrets.WEAVIATE_URL }}
        WEAVIATE_HOST: ${{ secrets.WEAVIATE_HOST }}
        WEAVIATE_HOSTNAME: ${{ secrets.WEAVIATE_HOSTNAME }}
        WEAVIATE_HTTP_HOST: ${{ secrets.WEAVIATE_HTTP_HOST }}
        WEAVIATE_GRPC_HOST: ${{ secrets.WEAVIATE_GRPC_HOST }}
        WEAVIATE_API_KEY: ${{ secrets.WEAVIATE_API_KEY }}
        WEAVIATE_LOCAL_API_KEY: ${{ secrets.WEAVIATE_LOCAL_API_KEY }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        COHERE_APIKEY: ${{ secrets.COHERE_APIKEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
        HUGGINGFACE_APIKEY: ${{ secrets.HUGGINGFACE_APIKEY }}
        ANTHROPIC_APIKEY: ${{ secrets.ANTHROPIC_APIKEY }}
        WCD_USERNAME: ${{ secrets.WCD_USERNAME }}
        WCD_PASSWORD: ${{ secrets.WCD_PASSWORD }}
      run: |
        source .venv/bin/activate
        pytest -m pyv4 -v --tb=short tests/test_client.py

    # Always run this step to clean up the containers
    - name: Stop services
      if: always()
      run: docker-compose down
