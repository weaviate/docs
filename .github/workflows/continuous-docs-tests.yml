name: CI for testing-ci branch

on:
  # Run on pushes to the testing-ci branch
  push:
    branches:
      - testing-ci

  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker image cache
        id: cache-docker-images
        uses: actions/cache@v4
        with:
          path: /tmp/docker-images.tar
          # The cache key is based on the hash of the docker-compose file.
          # This invalidates the cache automatically if you change your docker-compose.yml
          key: ${{ runner.os }}-docker-images-${{ hashFiles('**/docker-compose.yml') }}
          restore-keys: |
            ${{ runner.os }}-docker-images-

      - name: Load Docker images from cache or pull
        run: |
          if [[ "${{ steps.cache-docker-images.outputs.cache-hit }}" == "true" ]]; then
            echo "Cache hit. Loading Docker images from cache."
            docker load --input /tmp/docker-images.tar
          else
            echo "Cache miss. Pulling images from registry."
            docker compose -f tests/docker-compose.yml pull
            echo "Saving Docker images to cache."
            # Get all image names from docker-compose config and save them to a tarball
            docker save $(docker compose -f tests/docker-compose.yml config --images) -o /tmp/docker-images.tar
          fi

      - name: Start services
        run: docker compose -f tests/docker-compose.yml up -d

      # Your existing Python test steps
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Create virtual environment
        run: python -m venv .venv

      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate
          pip install -r tests/requirements.txt

      - name: Run tests
        env:
          WEAVIATE_URL: ${{ secrets.WEAVIATE_URL }}
          WEAVIATE_HOST: ${{ secrets.WEAVIATE_HOST }}
          WEAVIATE_HOSTNAME: ${{ secrets.WEAVIATE_HOSTNAME }}
          WEAVIATE_HTTP_HOST: ${{ secrets.WEAVIATE_HTTP_HOST }}
          WEAVIATE_GRPC_HOST: ${{ secrets.WEAVIATE_GRPC_HOST }}
          WEAVIATE_API_KEY: ${{ secrets.WEAVIATE_API_KEY }}
          WEAVIATE_LOCAL_API_KEY: ${{ secrets.WEAVIATE_LOCAL_API_KEY }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
          COHERE_APIKEY: ${{ secrets.COHERE_APIKEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
          HUGGINGFACE_APIKEY: ${{ secrets.HUGGINGFACE_APIKEY }}
          ANTHROPIC_APIKEY: ${{ secrets.ANTHROPIC_APIKEY }}
          WCD_USERNAME: ${{ secrets.WCD_USERNAME }}
          WCD_PASSWORD: ${{ secrets.WCD_PASSWORD }}
        run: |
          source .venv/bin/activate
          pytest -m pyv4 -v --tb=short tests/test_client.py

      # Always run this step to clean up the containers
      - name: Stop services
        if: always()
        run: docker compose -f tests/docker-compose.yml down
